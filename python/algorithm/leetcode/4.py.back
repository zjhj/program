#!/usr/bin/python3
# -*- coding:utf-8 -*-

class Solution:
	def findMedianSortedArrays(self, nums1, nums2):
		res = dict()

		i = 0
		j = 0

		while i<len(nums1) and j<len(nums2):
			if nums1[i] < nums2[j]:
				if nums1[i] not in res:
					res[nums1[i]] = 0
				res[nums1[i]] += 1
				i += 1
			else:
				if nums2[j] not in res:
					res[nums2[j]] = 0
				res[nums2[j]] += 1
				j += 1

		if i<len(nums1):
			for k in range( i,len(nums1) ):
				if nums1[k] in res:
					res[nums1[k]] += 1
				else:
					res[nums1[k]] = 1

		if j<len(nums2):
			for k in range( j,len(nums2) ):
				if nums2[k] in res:
					res[nums[k]] += 1
				else:
					res[nums2[k]] = 1

		print( res )

		cnt = mid1 = mid2 = 0
		stop = False
		for i in res:
			for j in range(res[i]):
				if cnt == len(res)//2-1:
					mid1 = j
				if cnt == len(res)//2:
					mid2 = j
					stop = True
					break
				cnt += 1
			if stop:
				break

		print( "mid1:{},mid2:{}".format(mid1,mid2) )

		if len(res)%2 == 0:
			return (mid1+mid2)/2
		else:
			return mid2

a = Solution()
# print( a.findMedianSortedArrays( [1,2],[3,4] ) )
# print( a.findMedianSortedArrays( [1,3],[2] ) )
# print( a.findMedianSortedArrays( [1,1],[1,2] ) )
print( a.findMedianSortedArrays( [1,2],[1,2] ) )
